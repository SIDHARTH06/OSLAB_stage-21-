alias userSP R0;
userSP = SP;
alias systemcallnum R1;

//set kernel stack pointer
[PROCESS_TABLE + 16*[SYSTEM_STATUS_TABLE+1] + 13] = SP;
SP = [PROCESS_TABLE + 16*[SYSTEM_STATUS_TABLE+1] + 11]*512 -1;

//wait system call
if( systemcallnum==13 ) then
    [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 13;
    alias pid R2;
    if( (pid==[SYSTEM_STATUS_TABLE+1]) || (pid>=MAX_PROC_NUM) || ([PROCESS_TABLE+pid*16+4]==TERMINATED) ) then
        [( [PTBR + 2*((userSP-1)/512)]*512 ) + (userSP-1)%512] = -1;
		[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9] = 0;
		SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 13];
		ireturn;
    endif;
    [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 4] = WAIT_PROCESS;
	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 5] = pid;

    multipush(R0, R1, R2, R3);
	call MOD_5;
	multipop(R0, R1, R2, R3);

    [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9] = 0;
	[( [PTBR + 2*((userSP-1)/512)]*512 ) + (userSP-1)%512] = 0;
	SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 13];
	ireturn;
endif;

//signal system call
if( systemcallnum==14 ) then
    [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 14;
    alias i R3;
    i=0;
    while (i<16) do
        if( ([PROCESS_TABLE + i*16 + 4]==WAIT_PROCESS) && ([PROCESS_TABLE + i*16 + 5]==[SYSTEM_STATUS_TABLE+1]) ) then
            [PROCESS_TABLE + i*16 + 4] = READY;
            [PROCESS_TABLE + i*16 + 5] = 0;
        endif;
        i=i+1;
    endwhile;
    [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9] = 0;
    [( [PTBR + 2*((userSP-1)/512)]*512 ) + (userSP-1)%512] = 0;
	SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 13];
    ireturn;
endif;

//getpid system call
if ( systemcallnum==11) then
    [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 11;
    [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9] = 0;
    [( [PTBR + 2*((userSP-1)/512)]*512 ) + (userSP-1)%512] = [SYSTEM_STATUS_TABLE+1];
    SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 13];
    ireturn;
endif;

//getppid system call
if ( systemcallnum==11) then
    [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 12;
    [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9] = 0;
    [( [PTBR + 2*((userSP-1)/512)]*512 ) + (userSP-1)%512] = [PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+2];
    SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 13];
    ireturn;
endif;

SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 13];
ireturn;
