alias userSP R0;
userSP=SP;
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 7;//MODE flag
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]* 16 + 13]=userSP; //saving user sp
SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 11]*512 - 1;
alias fileDescriptorAdd R1;
alias fileDescriptor R2; //at logical position: (userSP-4)
fileDescriptorAdd =( [ PTBR + ( 2*((userSP-4)/512) ) ]*512 ) + ( (userSP-4)%512 );
fileDescriptor = [fileDescriptorAdd];


if ( (fileDescriptor != -1) ) then  //if file desc is not -1 then set ret value as -1
	alias returnAdd R3;
	returnAdd = ( [PTBR + ( 2*((userSP-1)/512) ) ]*512 ) + ( (userSP-1) % 512 );
	[returnAdd] = -1;

else
    alias logicaladdressword R4;
    logicaladdressword=(userSP-3);
    multipush(R0,R1,R2,R3,R4,R5);
    R3 = logicaladdressword;
	R2 = [SYSTEM_STATUS_TABLE + 1];
	R1 = 4;
	call MOD_4;
	multipush(R0, R1, R2, R3, R4, R5);
    alias retadd R6;
    retadd= ( [PTBR + ( 2*((userSP-1)/512) ) ]*512 ) + ( (userSP-1) % 512 );
	[retadd] = 0;
endif;
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9] = 0; // modflag reset
SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 13];

ireturn;

